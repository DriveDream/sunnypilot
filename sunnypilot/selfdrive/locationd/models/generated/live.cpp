#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.14.0                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4642697741308526443) {
   out_4642697741308526443[0] = 0;
   out_4642697741308526443[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4642697741308526443[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4642697741308526443[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4642697741308526443[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4642697741308526443[5] = -sin(in_vec[1]);
   out_4642697741308526443[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4642697741308526443[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4642697741308526443[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4642697741308526443[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4642697741308526443[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4642697741308526443[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4642697741308526443[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4642697741308526443[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4642697741308526443[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4642697741308526443[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4642697741308526443[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4642697741308526443[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2165770424783456757) {
   out_2165770424783456757[0] = delta_x[0] + nom_x[0];
   out_2165770424783456757[1] = delta_x[1] + nom_x[1];
   out_2165770424783456757[2] = delta_x[2] + nom_x[2];
   out_2165770424783456757[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2165770424783456757[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2165770424783456757[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2165770424783456757[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2165770424783456757[7] = delta_x[6] + nom_x[7];
   out_2165770424783456757[8] = delta_x[7] + nom_x[8];
   out_2165770424783456757[9] = delta_x[8] + nom_x[9];
   out_2165770424783456757[10] = delta_x[9] + nom_x[10];
   out_2165770424783456757[11] = delta_x[10] + nom_x[11];
   out_2165770424783456757[12] = delta_x[11] + nom_x[12];
   out_2165770424783456757[13] = delta_x[12] + nom_x[13];
   out_2165770424783456757[14] = delta_x[13] + nom_x[14];
   out_2165770424783456757[15] = delta_x[14] + nom_x[15];
   out_2165770424783456757[16] = delta_x[15] + nom_x[16];
   out_2165770424783456757[17] = delta_x[16] + nom_x[17];
   out_2165770424783456757[18] = delta_x[17] + nom_x[18];
   out_2165770424783456757[19] = delta_x[18] + nom_x[19];
   out_2165770424783456757[20] = delta_x[19] + nom_x[20];
   out_2165770424783456757[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3351720479291780110) {
   out_3351720479291780110[0] = -nom_x[0] + true_x[0];
   out_3351720479291780110[1] = -nom_x[1] + true_x[1];
   out_3351720479291780110[2] = -nom_x[2] + true_x[2];
   out_3351720479291780110[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3351720479291780110[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3351720479291780110[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3351720479291780110[6] = -nom_x[7] + true_x[7];
   out_3351720479291780110[7] = -nom_x[8] + true_x[8];
   out_3351720479291780110[8] = -nom_x[9] + true_x[9];
   out_3351720479291780110[9] = -nom_x[10] + true_x[10];
   out_3351720479291780110[10] = -nom_x[11] + true_x[11];
   out_3351720479291780110[11] = -nom_x[12] + true_x[12];
   out_3351720479291780110[12] = -nom_x[13] + true_x[13];
   out_3351720479291780110[13] = -nom_x[14] + true_x[14];
   out_3351720479291780110[14] = -nom_x[15] + true_x[15];
   out_3351720479291780110[15] = -nom_x[16] + true_x[16];
   out_3351720479291780110[16] = -nom_x[17] + true_x[17];
   out_3351720479291780110[17] = -nom_x[18] + true_x[18];
   out_3351720479291780110[18] = -nom_x[19] + true_x[19];
   out_3351720479291780110[19] = -nom_x[20] + true_x[20];
   out_3351720479291780110[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6584352024001636745) {
   out_6584352024001636745[0] = 1.0;
   out_6584352024001636745[1] = 0;
   out_6584352024001636745[2] = 0;
   out_6584352024001636745[3] = 0.0;
   out_6584352024001636745[4] = 0.0;
   out_6584352024001636745[5] = 0.0;
   out_6584352024001636745[6] = 0.0;
   out_6584352024001636745[7] = 0.0;
   out_6584352024001636745[8] = 0.0;
   out_6584352024001636745[9] = 0.0;
   out_6584352024001636745[10] = 0.0;
   out_6584352024001636745[11] = 0.0;
   out_6584352024001636745[12] = 0.0;
   out_6584352024001636745[13] = 0.0;
   out_6584352024001636745[14] = 0.0;
   out_6584352024001636745[15] = 0.0;
   out_6584352024001636745[16] = 0.0;
   out_6584352024001636745[17] = 0.0;
   out_6584352024001636745[18] = 0.0;
   out_6584352024001636745[19] = 0.0;
   out_6584352024001636745[20] = 0.0;
   out_6584352024001636745[21] = 0;
   out_6584352024001636745[22] = 1.0;
   out_6584352024001636745[23] = 0;
   out_6584352024001636745[24] = 0.0;
   out_6584352024001636745[25] = 0.0;
   out_6584352024001636745[26] = 0.0;
   out_6584352024001636745[27] = 0.0;
   out_6584352024001636745[28] = 0.0;
   out_6584352024001636745[29] = 0.0;
   out_6584352024001636745[30] = 0.0;
   out_6584352024001636745[31] = 0.0;
   out_6584352024001636745[32] = 0.0;
   out_6584352024001636745[33] = 0.0;
   out_6584352024001636745[34] = 0.0;
   out_6584352024001636745[35] = 0.0;
   out_6584352024001636745[36] = 0.0;
   out_6584352024001636745[37] = 0.0;
   out_6584352024001636745[38] = 0.0;
   out_6584352024001636745[39] = 0.0;
   out_6584352024001636745[40] = 0.0;
   out_6584352024001636745[41] = 0.0;
   out_6584352024001636745[42] = 0;
   out_6584352024001636745[43] = 0;
   out_6584352024001636745[44] = 1.0;
   out_6584352024001636745[45] = 0.0;
   out_6584352024001636745[46] = 0.0;
   out_6584352024001636745[47] = 0.0;
   out_6584352024001636745[48] = 0.0;
   out_6584352024001636745[49] = 0.0;
   out_6584352024001636745[50] = 0.0;
   out_6584352024001636745[51] = 0.0;
   out_6584352024001636745[52] = 0.0;
   out_6584352024001636745[53] = 0.0;
   out_6584352024001636745[54] = 0.0;
   out_6584352024001636745[55] = 0.0;
   out_6584352024001636745[56] = 0.0;
   out_6584352024001636745[57] = 0.0;
   out_6584352024001636745[58] = 0.0;
   out_6584352024001636745[59] = 0.0;
   out_6584352024001636745[60] = 0.0;
   out_6584352024001636745[61] = 0.0;
   out_6584352024001636745[62] = 0.0;
   out_6584352024001636745[63] = 0.0;
   out_6584352024001636745[64] = 0.0;
   out_6584352024001636745[65] = 0.0;
   out_6584352024001636745[66] = -0.5*state[4];
   out_6584352024001636745[67] = -0.5*state[5];
   out_6584352024001636745[68] = -0.5*state[6];
   out_6584352024001636745[69] = 0.0;
   out_6584352024001636745[70] = 0.0;
   out_6584352024001636745[71] = 0.0;
   out_6584352024001636745[72] = 0.0;
   out_6584352024001636745[73] = 0.0;
   out_6584352024001636745[74] = 0.0;
   out_6584352024001636745[75] = 0.0;
   out_6584352024001636745[76] = 0.0;
   out_6584352024001636745[77] = 0.0;
   out_6584352024001636745[78] = 0.0;
   out_6584352024001636745[79] = 0.0;
   out_6584352024001636745[80] = 0.0;
   out_6584352024001636745[81] = 0.0;
   out_6584352024001636745[82] = 0.0;
   out_6584352024001636745[83] = 0.0;
   out_6584352024001636745[84] = 0.0;
   out_6584352024001636745[85] = 0.0;
   out_6584352024001636745[86] = 0.0;
   out_6584352024001636745[87] = 0.5*state[3];
   out_6584352024001636745[88] = 0.5*state[6];
   out_6584352024001636745[89] = -0.5*state[5];
   out_6584352024001636745[90] = 0.0;
   out_6584352024001636745[91] = 0.0;
   out_6584352024001636745[92] = 0.0;
   out_6584352024001636745[93] = 0.0;
   out_6584352024001636745[94] = 0.0;
   out_6584352024001636745[95] = 0.0;
   out_6584352024001636745[96] = 0.0;
   out_6584352024001636745[97] = 0.0;
   out_6584352024001636745[98] = 0.0;
   out_6584352024001636745[99] = 0.0;
   out_6584352024001636745[100] = 0.0;
   out_6584352024001636745[101] = 0.0;
   out_6584352024001636745[102] = 0.0;
   out_6584352024001636745[103] = 0.0;
   out_6584352024001636745[104] = 0.0;
   out_6584352024001636745[105] = 0.0;
   out_6584352024001636745[106] = 0.0;
   out_6584352024001636745[107] = 0.0;
   out_6584352024001636745[108] = -0.5*state[6];
   out_6584352024001636745[109] = 0.5*state[3];
   out_6584352024001636745[110] = 0.5*state[4];
   out_6584352024001636745[111] = 0.0;
   out_6584352024001636745[112] = 0.0;
   out_6584352024001636745[113] = 0.0;
   out_6584352024001636745[114] = 0.0;
   out_6584352024001636745[115] = 0.0;
   out_6584352024001636745[116] = 0.0;
   out_6584352024001636745[117] = 0.0;
   out_6584352024001636745[118] = 0.0;
   out_6584352024001636745[119] = 0.0;
   out_6584352024001636745[120] = 0.0;
   out_6584352024001636745[121] = 0.0;
   out_6584352024001636745[122] = 0.0;
   out_6584352024001636745[123] = 0.0;
   out_6584352024001636745[124] = 0.0;
   out_6584352024001636745[125] = 0.0;
   out_6584352024001636745[126] = 0.0;
   out_6584352024001636745[127] = 0.0;
   out_6584352024001636745[128] = 0.0;
   out_6584352024001636745[129] = 0.5*state[5];
   out_6584352024001636745[130] = -0.5*state[4];
   out_6584352024001636745[131] = 0.5*state[3];
   out_6584352024001636745[132] = 0.0;
   out_6584352024001636745[133] = 0.0;
   out_6584352024001636745[134] = 0.0;
   out_6584352024001636745[135] = 0.0;
   out_6584352024001636745[136] = 0.0;
   out_6584352024001636745[137] = 0.0;
   out_6584352024001636745[138] = 0.0;
   out_6584352024001636745[139] = 0.0;
   out_6584352024001636745[140] = 0.0;
   out_6584352024001636745[141] = 0.0;
   out_6584352024001636745[142] = 0.0;
   out_6584352024001636745[143] = 0.0;
   out_6584352024001636745[144] = 0.0;
   out_6584352024001636745[145] = 0.0;
   out_6584352024001636745[146] = 0.0;
   out_6584352024001636745[147] = 0.0;
   out_6584352024001636745[148] = 0.0;
   out_6584352024001636745[149] = 0.0;
   out_6584352024001636745[150] = 0.0;
   out_6584352024001636745[151] = 0.0;
   out_6584352024001636745[152] = 0.0;
   out_6584352024001636745[153] = 1.0;
   out_6584352024001636745[154] = 0;
   out_6584352024001636745[155] = 0;
   out_6584352024001636745[156] = 0;
   out_6584352024001636745[157] = 0;
   out_6584352024001636745[158] = 0;
   out_6584352024001636745[159] = 0;
   out_6584352024001636745[160] = 0;
   out_6584352024001636745[161] = 0;
   out_6584352024001636745[162] = 0;
   out_6584352024001636745[163] = 0;
   out_6584352024001636745[164] = 0;
   out_6584352024001636745[165] = 0;
   out_6584352024001636745[166] = 0;
   out_6584352024001636745[167] = 0;
   out_6584352024001636745[168] = 0.0;
   out_6584352024001636745[169] = 0.0;
   out_6584352024001636745[170] = 0.0;
   out_6584352024001636745[171] = 0.0;
   out_6584352024001636745[172] = 0.0;
   out_6584352024001636745[173] = 0.0;
   out_6584352024001636745[174] = 0;
   out_6584352024001636745[175] = 1.0;
   out_6584352024001636745[176] = 0;
   out_6584352024001636745[177] = 0;
   out_6584352024001636745[178] = 0;
   out_6584352024001636745[179] = 0;
   out_6584352024001636745[180] = 0;
   out_6584352024001636745[181] = 0;
   out_6584352024001636745[182] = 0;
   out_6584352024001636745[183] = 0;
   out_6584352024001636745[184] = 0;
   out_6584352024001636745[185] = 0;
   out_6584352024001636745[186] = 0;
   out_6584352024001636745[187] = 0;
   out_6584352024001636745[188] = 0;
   out_6584352024001636745[189] = 0.0;
   out_6584352024001636745[190] = 0.0;
   out_6584352024001636745[191] = 0.0;
   out_6584352024001636745[192] = 0.0;
   out_6584352024001636745[193] = 0.0;
   out_6584352024001636745[194] = 0.0;
   out_6584352024001636745[195] = 0;
   out_6584352024001636745[196] = 0;
   out_6584352024001636745[197] = 1.0;
   out_6584352024001636745[198] = 0;
   out_6584352024001636745[199] = 0;
   out_6584352024001636745[200] = 0;
   out_6584352024001636745[201] = 0;
   out_6584352024001636745[202] = 0;
   out_6584352024001636745[203] = 0;
   out_6584352024001636745[204] = 0;
   out_6584352024001636745[205] = 0;
   out_6584352024001636745[206] = 0;
   out_6584352024001636745[207] = 0;
   out_6584352024001636745[208] = 0;
   out_6584352024001636745[209] = 0;
   out_6584352024001636745[210] = 0.0;
   out_6584352024001636745[211] = 0.0;
   out_6584352024001636745[212] = 0.0;
   out_6584352024001636745[213] = 0.0;
   out_6584352024001636745[214] = 0.0;
   out_6584352024001636745[215] = 0.0;
   out_6584352024001636745[216] = 0;
   out_6584352024001636745[217] = 0;
   out_6584352024001636745[218] = 0;
   out_6584352024001636745[219] = 1.0;
   out_6584352024001636745[220] = 0;
   out_6584352024001636745[221] = 0;
   out_6584352024001636745[222] = 0;
   out_6584352024001636745[223] = 0;
   out_6584352024001636745[224] = 0;
   out_6584352024001636745[225] = 0;
   out_6584352024001636745[226] = 0;
   out_6584352024001636745[227] = 0;
   out_6584352024001636745[228] = 0;
   out_6584352024001636745[229] = 0;
   out_6584352024001636745[230] = 0;
   out_6584352024001636745[231] = 0.0;
   out_6584352024001636745[232] = 0.0;
   out_6584352024001636745[233] = 0.0;
   out_6584352024001636745[234] = 0.0;
   out_6584352024001636745[235] = 0.0;
   out_6584352024001636745[236] = 0.0;
   out_6584352024001636745[237] = 0;
   out_6584352024001636745[238] = 0;
   out_6584352024001636745[239] = 0;
   out_6584352024001636745[240] = 0;
   out_6584352024001636745[241] = 1.0;
   out_6584352024001636745[242] = 0;
   out_6584352024001636745[243] = 0;
   out_6584352024001636745[244] = 0;
   out_6584352024001636745[245] = 0;
   out_6584352024001636745[246] = 0;
   out_6584352024001636745[247] = 0;
   out_6584352024001636745[248] = 0;
   out_6584352024001636745[249] = 0;
   out_6584352024001636745[250] = 0;
   out_6584352024001636745[251] = 0;
   out_6584352024001636745[252] = 0.0;
   out_6584352024001636745[253] = 0.0;
   out_6584352024001636745[254] = 0.0;
   out_6584352024001636745[255] = 0.0;
   out_6584352024001636745[256] = 0.0;
   out_6584352024001636745[257] = 0.0;
   out_6584352024001636745[258] = 0;
   out_6584352024001636745[259] = 0;
   out_6584352024001636745[260] = 0;
   out_6584352024001636745[261] = 0;
   out_6584352024001636745[262] = 0;
   out_6584352024001636745[263] = 1.0;
   out_6584352024001636745[264] = 0;
   out_6584352024001636745[265] = 0;
   out_6584352024001636745[266] = 0;
   out_6584352024001636745[267] = 0;
   out_6584352024001636745[268] = 0;
   out_6584352024001636745[269] = 0;
   out_6584352024001636745[270] = 0;
   out_6584352024001636745[271] = 0;
   out_6584352024001636745[272] = 0;
   out_6584352024001636745[273] = 0.0;
   out_6584352024001636745[274] = 0.0;
   out_6584352024001636745[275] = 0.0;
   out_6584352024001636745[276] = 0.0;
   out_6584352024001636745[277] = 0.0;
   out_6584352024001636745[278] = 0.0;
   out_6584352024001636745[279] = 0;
   out_6584352024001636745[280] = 0;
   out_6584352024001636745[281] = 0;
   out_6584352024001636745[282] = 0;
   out_6584352024001636745[283] = 0;
   out_6584352024001636745[284] = 0;
   out_6584352024001636745[285] = 1.0;
   out_6584352024001636745[286] = 0;
   out_6584352024001636745[287] = 0;
   out_6584352024001636745[288] = 0;
   out_6584352024001636745[289] = 0;
   out_6584352024001636745[290] = 0;
   out_6584352024001636745[291] = 0;
   out_6584352024001636745[292] = 0;
   out_6584352024001636745[293] = 0;
   out_6584352024001636745[294] = 0.0;
   out_6584352024001636745[295] = 0.0;
   out_6584352024001636745[296] = 0.0;
   out_6584352024001636745[297] = 0.0;
   out_6584352024001636745[298] = 0.0;
   out_6584352024001636745[299] = 0.0;
   out_6584352024001636745[300] = 0;
   out_6584352024001636745[301] = 0;
   out_6584352024001636745[302] = 0;
   out_6584352024001636745[303] = 0;
   out_6584352024001636745[304] = 0;
   out_6584352024001636745[305] = 0;
   out_6584352024001636745[306] = 0;
   out_6584352024001636745[307] = 1.0;
   out_6584352024001636745[308] = 0;
   out_6584352024001636745[309] = 0;
   out_6584352024001636745[310] = 0;
   out_6584352024001636745[311] = 0;
   out_6584352024001636745[312] = 0;
   out_6584352024001636745[313] = 0;
   out_6584352024001636745[314] = 0;
   out_6584352024001636745[315] = 0.0;
   out_6584352024001636745[316] = 0.0;
   out_6584352024001636745[317] = 0.0;
   out_6584352024001636745[318] = 0.0;
   out_6584352024001636745[319] = 0.0;
   out_6584352024001636745[320] = 0.0;
   out_6584352024001636745[321] = 0;
   out_6584352024001636745[322] = 0;
   out_6584352024001636745[323] = 0;
   out_6584352024001636745[324] = 0;
   out_6584352024001636745[325] = 0;
   out_6584352024001636745[326] = 0;
   out_6584352024001636745[327] = 0;
   out_6584352024001636745[328] = 0;
   out_6584352024001636745[329] = 1.0;
   out_6584352024001636745[330] = 0;
   out_6584352024001636745[331] = 0;
   out_6584352024001636745[332] = 0;
   out_6584352024001636745[333] = 0;
   out_6584352024001636745[334] = 0;
   out_6584352024001636745[335] = 0;
   out_6584352024001636745[336] = 0.0;
   out_6584352024001636745[337] = 0.0;
   out_6584352024001636745[338] = 0.0;
   out_6584352024001636745[339] = 0.0;
   out_6584352024001636745[340] = 0.0;
   out_6584352024001636745[341] = 0.0;
   out_6584352024001636745[342] = 0;
   out_6584352024001636745[343] = 0;
   out_6584352024001636745[344] = 0;
   out_6584352024001636745[345] = 0;
   out_6584352024001636745[346] = 0;
   out_6584352024001636745[347] = 0;
   out_6584352024001636745[348] = 0;
   out_6584352024001636745[349] = 0;
   out_6584352024001636745[350] = 0;
   out_6584352024001636745[351] = 1.0;
   out_6584352024001636745[352] = 0;
   out_6584352024001636745[353] = 0;
   out_6584352024001636745[354] = 0;
   out_6584352024001636745[355] = 0;
   out_6584352024001636745[356] = 0;
   out_6584352024001636745[357] = 0.0;
   out_6584352024001636745[358] = 0.0;
   out_6584352024001636745[359] = 0.0;
   out_6584352024001636745[360] = 0.0;
   out_6584352024001636745[361] = 0.0;
   out_6584352024001636745[362] = 0.0;
   out_6584352024001636745[363] = 0;
   out_6584352024001636745[364] = 0;
   out_6584352024001636745[365] = 0;
   out_6584352024001636745[366] = 0;
   out_6584352024001636745[367] = 0;
   out_6584352024001636745[368] = 0;
   out_6584352024001636745[369] = 0;
   out_6584352024001636745[370] = 0;
   out_6584352024001636745[371] = 0;
   out_6584352024001636745[372] = 0;
   out_6584352024001636745[373] = 1.0;
   out_6584352024001636745[374] = 0;
   out_6584352024001636745[375] = 0;
   out_6584352024001636745[376] = 0;
   out_6584352024001636745[377] = 0;
   out_6584352024001636745[378] = 0.0;
   out_6584352024001636745[379] = 0.0;
   out_6584352024001636745[380] = 0.0;
   out_6584352024001636745[381] = 0.0;
   out_6584352024001636745[382] = 0.0;
   out_6584352024001636745[383] = 0.0;
   out_6584352024001636745[384] = 0;
   out_6584352024001636745[385] = 0;
   out_6584352024001636745[386] = 0;
   out_6584352024001636745[387] = 0;
   out_6584352024001636745[388] = 0;
   out_6584352024001636745[389] = 0;
   out_6584352024001636745[390] = 0;
   out_6584352024001636745[391] = 0;
   out_6584352024001636745[392] = 0;
   out_6584352024001636745[393] = 0;
   out_6584352024001636745[394] = 0;
   out_6584352024001636745[395] = 1.0;
   out_6584352024001636745[396] = 0;
   out_6584352024001636745[397] = 0;
   out_6584352024001636745[398] = 0;
   out_6584352024001636745[399] = 0.0;
   out_6584352024001636745[400] = 0.0;
   out_6584352024001636745[401] = 0.0;
   out_6584352024001636745[402] = 0.0;
   out_6584352024001636745[403] = 0.0;
   out_6584352024001636745[404] = 0.0;
   out_6584352024001636745[405] = 0;
   out_6584352024001636745[406] = 0;
   out_6584352024001636745[407] = 0;
   out_6584352024001636745[408] = 0;
   out_6584352024001636745[409] = 0;
   out_6584352024001636745[410] = 0;
   out_6584352024001636745[411] = 0;
   out_6584352024001636745[412] = 0;
   out_6584352024001636745[413] = 0;
   out_6584352024001636745[414] = 0;
   out_6584352024001636745[415] = 0;
   out_6584352024001636745[416] = 0;
   out_6584352024001636745[417] = 1.0;
   out_6584352024001636745[418] = 0;
   out_6584352024001636745[419] = 0;
   out_6584352024001636745[420] = 0.0;
   out_6584352024001636745[421] = 0.0;
   out_6584352024001636745[422] = 0.0;
   out_6584352024001636745[423] = 0.0;
   out_6584352024001636745[424] = 0.0;
   out_6584352024001636745[425] = 0.0;
   out_6584352024001636745[426] = 0;
   out_6584352024001636745[427] = 0;
   out_6584352024001636745[428] = 0;
   out_6584352024001636745[429] = 0;
   out_6584352024001636745[430] = 0;
   out_6584352024001636745[431] = 0;
   out_6584352024001636745[432] = 0;
   out_6584352024001636745[433] = 0;
   out_6584352024001636745[434] = 0;
   out_6584352024001636745[435] = 0;
   out_6584352024001636745[436] = 0;
   out_6584352024001636745[437] = 0;
   out_6584352024001636745[438] = 0;
   out_6584352024001636745[439] = 1.0;
   out_6584352024001636745[440] = 0;
   out_6584352024001636745[441] = 0.0;
   out_6584352024001636745[442] = 0.0;
   out_6584352024001636745[443] = 0.0;
   out_6584352024001636745[444] = 0.0;
   out_6584352024001636745[445] = 0.0;
   out_6584352024001636745[446] = 0.0;
   out_6584352024001636745[447] = 0;
   out_6584352024001636745[448] = 0;
   out_6584352024001636745[449] = 0;
   out_6584352024001636745[450] = 0;
   out_6584352024001636745[451] = 0;
   out_6584352024001636745[452] = 0;
   out_6584352024001636745[453] = 0;
   out_6584352024001636745[454] = 0;
   out_6584352024001636745[455] = 0;
   out_6584352024001636745[456] = 0;
   out_6584352024001636745[457] = 0;
   out_6584352024001636745[458] = 0;
   out_6584352024001636745[459] = 0;
   out_6584352024001636745[460] = 0;
   out_6584352024001636745[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1043206997310578708) {
   out_1043206997310578708[0] = dt*state[7] + state[0];
   out_1043206997310578708[1] = dt*state[8] + state[1];
   out_1043206997310578708[2] = dt*state[9] + state[2];
   out_1043206997310578708[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1043206997310578708[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1043206997310578708[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1043206997310578708[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1043206997310578708[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1043206997310578708[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1043206997310578708[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1043206997310578708[10] = state[10];
   out_1043206997310578708[11] = state[11];
   out_1043206997310578708[12] = state[12];
   out_1043206997310578708[13] = state[13];
   out_1043206997310578708[14] = state[14];
   out_1043206997310578708[15] = state[15];
   out_1043206997310578708[16] = state[16];
   out_1043206997310578708[17] = state[17];
   out_1043206997310578708[18] = state[18];
   out_1043206997310578708[19] = state[19];
   out_1043206997310578708[20] = state[20];
   out_1043206997310578708[21] = state[21];
}
void F_fun(double *state, double dt, double *out_188722001523302554) {
   out_188722001523302554[0] = 1;
   out_188722001523302554[1] = 0;
   out_188722001523302554[2] = 0;
   out_188722001523302554[3] = 0;
   out_188722001523302554[4] = 0;
   out_188722001523302554[5] = 0;
   out_188722001523302554[6] = dt;
   out_188722001523302554[7] = 0;
   out_188722001523302554[8] = 0;
   out_188722001523302554[9] = 0;
   out_188722001523302554[10] = 0;
   out_188722001523302554[11] = 0;
   out_188722001523302554[12] = 0;
   out_188722001523302554[13] = 0;
   out_188722001523302554[14] = 0;
   out_188722001523302554[15] = 0;
   out_188722001523302554[16] = 0;
   out_188722001523302554[17] = 0;
   out_188722001523302554[18] = 0;
   out_188722001523302554[19] = 0;
   out_188722001523302554[20] = 0;
   out_188722001523302554[21] = 0;
   out_188722001523302554[22] = 1;
   out_188722001523302554[23] = 0;
   out_188722001523302554[24] = 0;
   out_188722001523302554[25] = 0;
   out_188722001523302554[26] = 0;
   out_188722001523302554[27] = 0;
   out_188722001523302554[28] = dt;
   out_188722001523302554[29] = 0;
   out_188722001523302554[30] = 0;
   out_188722001523302554[31] = 0;
   out_188722001523302554[32] = 0;
   out_188722001523302554[33] = 0;
   out_188722001523302554[34] = 0;
   out_188722001523302554[35] = 0;
   out_188722001523302554[36] = 0;
   out_188722001523302554[37] = 0;
   out_188722001523302554[38] = 0;
   out_188722001523302554[39] = 0;
   out_188722001523302554[40] = 0;
   out_188722001523302554[41] = 0;
   out_188722001523302554[42] = 0;
   out_188722001523302554[43] = 0;
   out_188722001523302554[44] = 1;
   out_188722001523302554[45] = 0;
   out_188722001523302554[46] = 0;
   out_188722001523302554[47] = 0;
   out_188722001523302554[48] = 0;
   out_188722001523302554[49] = 0;
   out_188722001523302554[50] = dt;
   out_188722001523302554[51] = 0;
   out_188722001523302554[52] = 0;
   out_188722001523302554[53] = 0;
   out_188722001523302554[54] = 0;
   out_188722001523302554[55] = 0;
   out_188722001523302554[56] = 0;
   out_188722001523302554[57] = 0;
   out_188722001523302554[58] = 0;
   out_188722001523302554[59] = 0;
   out_188722001523302554[60] = 0;
   out_188722001523302554[61] = 0;
   out_188722001523302554[62] = 0;
   out_188722001523302554[63] = 0;
   out_188722001523302554[64] = 0;
   out_188722001523302554[65] = 0;
   out_188722001523302554[66] = 1;
   out_188722001523302554[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_188722001523302554[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_188722001523302554[69] = 0;
   out_188722001523302554[70] = 0;
   out_188722001523302554[71] = 0;
   out_188722001523302554[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_188722001523302554[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_188722001523302554[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_188722001523302554[75] = 0;
   out_188722001523302554[76] = 0;
   out_188722001523302554[77] = 0;
   out_188722001523302554[78] = 0;
   out_188722001523302554[79] = 0;
   out_188722001523302554[80] = 0;
   out_188722001523302554[81] = 0;
   out_188722001523302554[82] = 0;
   out_188722001523302554[83] = 0;
   out_188722001523302554[84] = 0;
   out_188722001523302554[85] = 0;
   out_188722001523302554[86] = 0;
   out_188722001523302554[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_188722001523302554[88] = 1;
   out_188722001523302554[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_188722001523302554[90] = 0;
   out_188722001523302554[91] = 0;
   out_188722001523302554[92] = 0;
   out_188722001523302554[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_188722001523302554[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_188722001523302554[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_188722001523302554[96] = 0;
   out_188722001523302554[97] = 0;
   out_188722001523302554[98] = 0;
   out_188722001523302554[99] = 0;
   out_188722001523302554[100] = 0;
   out_188722001523302554[101] = 0;
   out_188722001523302554[102] = 0;
   out_188722001523302554[103] = 0;
   out_188722001523302554[104] = 0;
   out_188722001523302554[105] = 0;
   out_188722001523302554[106] = 0;
   out_188722001523302554[107] = 0;
   out_188722001523302554[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_188722001523302554[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_188722001523302554[110] = 1;
   out_188722001523302554[111] = 0;
   out_188722001523302554[112] = 0;
   out_188722001523302554[113] = 0;
   out_188722001523302554[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_188722001523302554[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_188722001523302554[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_188722001523302554[117] = 0;
   out_188722001523302554[118] = 0;
   out_188722001523302554[119] = 0;
   out_188722001523302554[120] = 0;
   out_188722001523302554[121] = 0;
   out_188722001523302554[122] = 0;
   out_188722001523302554[123] = 0;
   out_188722001523302554[124] = 0;
   out_188722001523302554[125] = 0;
   out_188722001523302554[126] = 0;
   out_188722001523302554[127] = 0;
   out_188722001523302554[128] = 0;
   out_188722001523302554[129] = 0;
   out_188722001523302554[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_188722001523302554[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_188722001523302554[132] = 1;
   out_188722001523302554[133] = 0;
   out_188722001523302554[134] = 0;
   out_188722001523302554[135] = 0;
   out_188722001523302554[136] = 0;
   out_188722001523302554[137] = 0;
   out_188722001523302554[138] = 0;
   out_188722001523302554[139] = 0;
   out_188722001523302554[140] = 0;
   out_188722001523302554[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_188722001523302554[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_188722001523302554[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_188722001523302554[144] = 0;
   out_188722001523302554[145] = 0;
   out_188722001523302554[146] = 0;
   out_188722001523302554[147] = 0;
   out_188722001523302554[148] = 0;
   out_188722001523302554[149] = 0;
   out_188722001523302554[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_188722001523302554[151] = 0;
   out_188722001523302554[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_188722001523302554[153] = 0;
   out_188722001523302554[154] = 1;
   out_188722001523302554[155] = 0;
   out_188722001523302554[156] = 0;
   out_188722001523302554[157] = 0;
   out_188722001523302554[158] = 0;
   out_188722001523302554[159] = 0;
   out_188722001523302554[160] = 0;
   out_188722001523302554[161] = 0;
   out_188722001523302554[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_188722001523302554[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_188722001523302554[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_188722001523302554[165] = 0;
   out_188722001523302554[166] = 0;
   out_188722001523302554[167] = 0;
   out_188722001523302554[168] = 0;
   out_188722001523302554[169] = 0;
   out_188722001523302554[170] = 0;
   out_188722001523302554[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_188722001523302554[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_188722001523302554[173] = 0;
   out_188722001523302554[174] = 0;
   out_188722001523302554[175] = 0;
   out_188722001523302554[176] = 1;
   out_188722001523302554[177] = 0;
   out_188722001523302554[178] = 0;
   out_188722001523302554[179] = 0;
   out_188722001523302554[180] = 0;
   out_188722001523302554[181] = 0;
   out_188722001523302554[182] = 0;
   out_188722001523302554[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_188722001523302554[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_188722001523302554[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_188722001523302554[186] = 0;
   out_188722001523302554[187] = 0;
   out_188722001523302554[188] = 0;
   out_188722001523302554[189] = 0;
   out_188722001523302554[190] = 0;
   out_188722001523302554[191] = 0;
   out_188722001523302554[192] = 0;
   out_188722001523302554[193] = 0;
   out_188722001523302554[194] = 0;
   out_188722001523302554[195] = 0;
   out_188722001523302554[196] = 0;
   out_188722001523302554[197] = 0;
   out_188722001523302554[198] = 1;
   out_188722001523302554[199] = 0;
   out_188722001523302554[200] = 0;
   out_188722001523302554[201] = 0;
   out_188722001523302554[202] = 0;
   out_188722001523302554[203] = 0;
   out_188722001523302554[204] = 0;
   out_188722001523302554[205] = 0;
   out_188722001523302554[206] = 0;
   out_188722001523302554[207] = 0;
   out_188722001523302554[208] = 0;
   out_188722001523302554[209] = 0;
   out_188722001523302554[210] = 0;
   out_188722001523302554[211] = 0;
   out_188722001523302554[212] = 0;
   out_188722001523302554[213] = 0;
   out_188722001523302554[214] = 0;
   out_188722001523302554[215] = 0;
   out_188722001523302554[216] = 0;
   out_188722001523302554[217] = 0;
   out_188722001523302554[218] = 0;
   out_188722001523302554[219] = 0;
   out_188722001523302554[220] = 1;
   out_188722001523302554[221] = 0;
   out_188722001523302554[222] = 0;
   out_188722001523302554[223] = 0;
   out_188722001523302554[224] = 0;
   out_188722001523302554[225] = 0;
   out_188722001523302554[226] = 0;
   out_188722001523302554[227] = 0;
   out_188722001523302554[228] = 0;
   out_188722001523302554[229] = 0;
   out_188722001523302554[230] = 0;
   out_188722001523302554[231] = 0;
   out_188722001523302554[232] = 0;
   out_188722001523302554[233] = 0;
   out_188722001523302554[234] = 0;
   out_188722001523302554[235] = 0;
   out_188722001523302554[236] = 0;
   out_188722001523302554[237] = 0;
   out_188722001523302554[238] = 0;
   out_188722001523302554[239] = 0;
   out_188722001523302554[240] = 0;
   out_188722001523302554[241] = 0;
   out_188722001523302554[242] = 1;
   out_188722001523302554[243] = 0;
   out_188722001523302554[244] = 0;
   out_188722001523302554[245] = 0;
   out_188722001523302554[246] = 0;
   out_188722001523302554[247] = 0;
   out_188722001523302554[248] = 0;
   out_188722001523302554[249] = 0;
   out_188722001523302554[250] = 0;
   out_188722001523302554[251] = 0;
   out_188722001523302554[252] = 0;
   out_188722001523302554[253] = 0;
   out_188722001523302554[254] = 0;
   out_188722001523302554[255] = 0;
   out_188722001523302554[256] = 0;
   out_188722001523302554[257] = 0;
   out_188722001523302554[258] = 0;
   out_188722001523302554[259] = 0;
   out_188722001523302554[260] = 0;
   out_188722001523302554[261] = 0;
   out_188722001523302554[262] = 0;
   out_188722001523302554[263] = 0;
   out_188722001523302554[264] = 1;
   out_188722001523302554[265] = 0;
   out_188722001523302554[266] = 0;
   out_188722001523302554[267] = 0;
   out_188722001523302554[268] = 0;
   out_188722001523302554[269] = 0;
   out_188722001523302554[270] = 0;
   out_188722001523302554[271] = 0;
   out_188722001523302554[272] = 0;
   out_188722001523302554[273] = 0;
   out_188722001523302554[274] = 0;
   out_188722001523302554[275] = 0;
   out_188722001523302554[276] = 0;
   out_188722001523302554[277] = 0;
   out_188722001523302554[278] = 0;
   out_188722001523302554[279] = 0;
   out_188722001523302554[280] = 0;
   out_188722001523302554[281] = 0;
   out_188722001523302554[282] = 0;
   out_188722001523302554[283] = 0;
   out_188722001523302554[284] = 0;
   out_188722001523302554[285] = 0;
   out_188722001523302554[286] = 1;
   out_188722001523302554[287] = 0;
   out_188722001523302554[288] = 0;
   out_188722001523302554[289] = 0;
   out_188722001523302554[290] = 0;
   out_188722001523302554[291] = 0;
   out_188722001523302554[292] = 0;
   out_188722001523302554[293] = 0;
   out_188722001523302554[294] = 0;
   out_188722001523302554[295] = 0;
   out_188722001523302554[296] = 0;
   out_188722001523302554[297] = 0;
   out_188722001523302554[298] = 0;
   out_188722001523302554[299] = 0;
   out_188722001523302554[300] = 0;
   out_188722001523302554[301] = 0;
   out_188722001523302554[302] = 0;
   out_188722001523302554[303] = 0;
   out_188722001523302554[304] = 0;
   out_188722001523302554[305] = 0;
   out_188722001523302554[306] = 0;
   out_188722001523302554[307] = 0;
   out_188722001523302554[308] = 1;
   out_188722001523302554[309] = 0;
   out_188722001523302554[310] = 0;
   out_188722001523302554[311] = 0;
   out_188722001523302554[312] = 0;
   out_188722001523302554[313] = 0;
   out_188722001523302554[314] = 0;
   out_188722001523302554[315] = 0;
   out_188722001523302554[316] = 0;
   out_188722001523302554[317] = 0;
   out_188722001523302554[318] = 0;
   out_188722001523302554[319] = 0;
   out_188722001523302554[320] = 0;
   out_188722001523302554[321] = 0;
   out_188722001523302554[322] = 0;
   out_188722001523302554[323] = 0;
   out_188722001523302554[324] = 0;
   out_188722001523302554[325] = 0;
   out_188722001523302554[326] = 0;
   out_188722001523302554[327] = 0;
   out_188722001523302554[328] = 0;
   out_188722001523302554[329] = 0;
   out_188722001523302554[330] = 1;
   out_188722001523302554[331] = 0;
   out_188722001523302554[332] = 0;
   out_188722001523302554[333] = 0;
   out_188722001523302554[334] = 0;
   out_188722001523302554[335] = 0;
   out_188722001523302554[336] = 0;
   out_188722001523302554[337] = 0;
   out_188722001523302554[338] = 0;
   out_188722001523302554[339] = 0;
   out_188722001523302554[340] = 0;
   out_188722001523302554[341] = 0;
   out_188722001523302554[342] = 0;
   out_188722001523302554[343] = 0;
   out_188722001523302554[344] = 0;
   out_188722001523302554[345] = 0;
   out_188722001523302554[346] = 0;
   out_188722001523302554[347] = 0;
   out_188722001523302554[348] = 0;
   out_188722001523302554[349] = 0;
   out_188722001523302554[350] = 0;
   out_188722001523302554[351] = 0;
   out_188722001523302554[352] = 1;
   out_188722001523302554[353] = 0;
   out_188722001523302554[354] = 0;
   out_188722001523302554[355] = 0;
   out_188722001523302554[356] = 0;
   out_188722001523302554[357] = 0;
   out_188722001523302554[358] = 0;
   out_188722001523302554[359] = 0;
   out_188722001523302554[360] = 0;
   out_188722001523302554[361] = 0;
   out_188722001523302554[362] = 0;
   out_188722001523302554[363] = 0;
   out_188722001523302554[364] = 0;
   out_188722001523302554[365] = 0;
   out_188722001523302554[366] = 0;
   out_188722001523302554[367] = 0;
   out_188722001523302554[368] = 0;
   out_188722001523302554[369] = 0;
   out_188722001523302554[370] = 0;
   out_188722001523302554[371] = 0;
   out_188722001523302554[372] = 0;
   out_188722001523302554[373] = 0;
   out_188722001523302554[374] = 1;
   out_188722001523302554[375] = 0;
   out_188722001523302554[376] = 0;
   out_188722001523302554[377] = 0;
   out_188722001523302554[378] = 0;
   out_188722001523302554[379] = 0;
   out_188722001523302554[380] = 0;
   out_188722001523302554[381] = 0;
   out_188722001523302554[382] = 0;
   out_188722001523302554[383] = 0;
   out_188722001523302554[384] = 0;
   out_188722001523302554[385] = 0;
   out_188722001523302554[386] = 0;
   out_188722001523302554[387] = 0;
   out_188722001523302554[388] = 0;
   out_188722001523302554[389] = 0;
   out_188722001523302554[390] = 0;
   out_188722001523302554[391] = 0;
   out_188722001523302554[392] = 0;
   out_188722001523302554[393] = 0;
   out_188722001523302554[394] = 0;
   out_188722001523302554[395] = 0;
   out_188722001523302554[396] = 1;
   out_188722001523302554[397] = 0;
   out_188722001523302554[398] = 0;
   out_188722001523302554[399] = 0;
   out_188722001523302554[400] = 0;
   out_188722001523302554[401] = 0;
   out_188722001523302554[402] = 0;
   out_188722001523302554[403] = 0;
   out_188722001523302554[404] = 0;
   out_188722001523302554[405] = 0;
   out_188722001523302554[406] = 0;
   out_188722001523302554[407] = 0;
   out_188722001523302554[408] = 0;
   out_188722001523302554[409] = 0;
   out_188722001523302554[410] = 0;
   out_188722001523302554[411] = 0;
   out_188722001523302554[412] = 0;
   out_188722001523302554[413] = 0;
   out_188722001523302554[414] = 0;
   out_188722001523302554[415] = 0;
   out_188722001523302554[416] = 0;
   out_188722001523302554[417] = 0;
   out_188722001523302554[418] = 1;
   out_188722001523302554[419] = 0;
   out_188722001523302554[420] = 0;
   out_188722001523302554[421] = 0;
   out_188722001523302554[422] = 0;
   out_188722001523302554[423] = 0;
   out_188722001523302554[424] = 0;
   out_188722001523302554[425] = 0;
   out_188722001523302554[426] = 0;
   out_188722001523302554[427] = 0;
   out_188722001523302554[428] = 0;
   out_188722001523302554[429] = 0;
   out_188722001523302554[430] = 0;
   out_188722001523302554[431] = 0;
   out_188722001523302554[432] = 0;
   out_188722001523302554[433] = 0;
   out_188722001523302554[434] = 0;
   out_188722001523302554[435] = 0;
   out_188722001523302554[436] = 0;
   out_188722001523302554[437] = 0;
   out_188722001523302554[438] = 0;
   out_188722001523302554[439] = 0;
   out_188722001523302554[440] = 1;
}
void h_4(double *state, double *unused, double *out_6655992373746929060) {
   out_6655992373746929060[0] = state[10] + state[13];
   out_6655992373746929060[1] = state[11] + state[14];
   out_6655992373746929060[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3248634536311175072) {
   out_3248634536311175072[0] = 0;
   out_3248634536311175072[1] = 0;
   out_3248634536311175072[2] = 0;
   out_3248634536311175072[3] = 0;
   out_3248634536311175072[4] = 0;
   out_3248634536311175072[5] = 0;
   out_3248634536311175072[6] = 0;
   out_3248634536311175072[7] = 0;
   out_3248634536311175072[8] = 0;
   out_3248634536311175072[9] = 0;
   out_3248634536311175072[10] = 1;
   out_3248634536311175072[11] = 0;
   out_3248634536311175072[12] = 0;
   out_3248634536311175072[13] = 1;
   out_3248634536311175072[14] = 0;
   out_3248634536311175072[15] = 0;
   out_3248634536311175072[16] = 0;
   out_3248634536311175072[17] = 0;
   out_3248634536311175072[18] = 0;
   out_3248634536311175072[19] = 0;
   out_3248634536311175072[20] = 0;
   out_3248634536311175072[21] = 0;
   out_3248634536311175072[22] = 0;
   out_3248634536311175072[23] = 0;
   out_3248634536311175072[24] = 0;
   out_3248634536311175072[25] = 0;
   out_3248634536311175072[26] = 0;
   out_3248634536311175072[27] = 0;
   out_3248634536311175072[28] = 0;
   out_3248634536311175072[29] = 0;
   out_3248634536311175072[30] = 0;
   out_3248634536311175072[31] = 0;
   out_3248634536311175072[32] = 0;
   out_3248634536311175072[33] = 1;
   out_3248634536311175072[34] = 0;
   out_3248634536311175072[35] = 0;
   out_3248634536311175072[36] = 1;
   out_3248634536311175072[37] = 0;
   out_3248634536311175072[38] = 0;
   out_3248634536311175072[39] = 0;
   out_3248634536311175072[40] = 0;
   out_3248634536311175072[41] = 0;
   out_3248634536311175072[42] = 0;
   out_3248634536311175072[43] = 0;
   out_3248634536311175072[44] = 0;
   out_3248634536311175072[45] = 0;
   out_3248634536311175072[46] = 0;
   out_3248634536311175072[47] = 0;
   out_3248634536311175072[48] = 0;
   out_3248634536311175072[49] = 0;
   out_3248634536311175072[50] = 0;
   out_3248634536311175072[51] = 0;
   out_3248634536311175072[52] = 0;
   out_3248634536311175072[53] = 0;
   out_3248634536311175072[54] = 0;
   out_3248634536311175072[55] = 0;
   out_3248634536311175072[56] = 1;
   out_3248634536311175072[57] = 0;
   out_3248634536311175072[58] = 0;
   out_3248634536311175072[59] = 1;
   out_3248634536311175072[60] = 0;
   out_3248634536311175072[61] = 0;
   out_3248634536311175072[62] = 0;
   out_3248634536311175072[63] = 0;
   out_3248634536311175072[64] = 0;
   out_3248634536311175072[65] = 0;
}
void h_9(double *state, double *unused, double *out_4122145493608870189) {
   out_4122145493608870189[0] = state[10];
   out_4122145493608870189[1] = state[11];
   out_4122145493608870189[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3489824182940765717) {
   out_3489824182940765717[0] = 0;
   out_3489824182940765717[1] = 0;
   out_3489824182940765717[2] = 0;
   out_3489824182940765717[3] = 0;
   out_3489824182940765717[4] = 0;
   out_3489824182940765717[5] = 0;
   out_3489824182940765717[6] = 0;
   out_3489824182940765717[7] = 0;
   out_3489824182940765717[8] = 0;
   out_3489824182940765717[9] = 0;
   out_3489824182940765717[10] = 1;
   out_3489824182940765717[11] = 0;
   out_3489824182940765717[12] = 0;
   out_3489824182940765717[13] = 0;
   out_3489824182940765717[14] = 0;
   out_3489824182940765717[15] = 0;
   out_3489824182940765717[16] = 0;
   out_3489824182940765717[17] = 0;
   out_3489824182940765717[18] = 0;
   out_3489824182940765717[19] = 0;
   out_3489824182940765717[20] = 0;
   out_3489824182940765717[21] = 0;
   out_3489824182940765717[22] = 0;
   out_3489824182940765717[23] = 0;
   out_3489824182940765717[24] = 0;
   out_3489824182940765717[25] = 0;
   out_3489824182940765717[26] = 0;
   out_3489824182940765717[27] = 0;
   out_3489824182940765717[28] = 0;
   out_3489824182940765717[29] = 0;
   out_3489824182940765717[30] = 0;
   out_3489824182940765717[31] = 0;
   out_3489824182940765717[32] = 0;
   out_3489824182940765717[33] = 1;
   out_3489824182940765717[34] = 0;
   out_3489824182940765717[35] = 0;
   out_3489824182940765717[36] = 0;
   out_3489824182940765717[37] = 0;
   out_3489824182940765717[38] = 0;
   out_3489824182940765717[39] = 0;
   out_3489824182940765717[40] = 0;
   out_3489824182940765717[41] = 0;
   out_3489824182940765717[42] = 0;
   out_3489824182940765717[43] = 0;
   out_3489824182940765717[44] = 0;
   out_3489824182940765717[45] = 0;
   out_3489824182940765717[46] = 0;
   out_3489824182940765717[47] = 0;
   out_3489824182940765717[48] = 0;
   out_3489824182940765717[49] = 0;
   out_3489824182940765717[50] = 0;
   out_3489824182940765717[51] = 0;
   out_3489824182940765717[52] = 0;
   out_3489824182940765717[53] = 0;
   out_3489824182940765717[54] = 0;
   out_3489824182940765717[55] = 0;
   out_3489824182940765717[56] = 1;
   out_3489824182940765717[57] = 0;
   out_3489824182940765717[58] = 0;
   out_3489824182940765717[59] = 0;
   out_3489824182940765717[60] = 0;
   out_3489824182940765717[61] = 0;
   out_3489824182940765717[62] = 0;
   out_3489824182940765717[63] = 0;
   out_3489824182940765717[64] = 0;
   out_3489824182940765717[65] = 0;
}
void h_10(double *state, double *unused, double *out_645947892789743159) {
   out_645947892789743159[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_645947892789743159[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_645947892789743159[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7621534239664898320) {
   out_7621534239664898320[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7621534239664898320[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7621534239664898320[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7621534239664898320[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7621534239664898320[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7621534239664898320[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7621534239664898320[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7621534239664898320[7] = 0;
   out_7621534239664898320[8] = 0;
   out_7621534239664898320[9] = 0;
   out_7621534239664898320[10] = 0;
   out_7621534239664898320[11] = 0;
   out_7621534239664898320[12] = 0;
   out_7621534239664898320[13] = 0;
   out_7621534239664898320[14] = 0;
   out_7621534239664898320[15] = 0;
   out_7621534239664898320[16] = 1;
   out_7621534239664898320[17] = 0;
   out_7621534239664898320[18] = 0;
   out_7621534239664898320[19] = 1;
   out_7621534239664898320[20] = 0;
   out_7621534239664898320[21] = 0;
   out_7621534239664898320[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7621534239664898320[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7621534239664898320[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7621534239664898320[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7621534239664898320[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7621534239664898320[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7621534239664898320[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7621534239664898320[29] = 0;
   out_7621534239664898320[30] = 0;
   out_7621534239664898320[31] = 0;
   out_7621534239664898320[32] = 0;
   out_7621534239664898320[33] = 0;
   out_7621534239664898320[34] = 0;
   out_7621534239664898320[35] = 0;
   out_7621534239664898320[36] = 0;
   out_7621534239664898320[37] = 0;
   out_7621534239664898320[38] = 0;
   out_7621534239664898320[39] = 1;
   out_7621534239664898320[40] = 0;
   out_7621534239664898320[41] = 0;
   out_7621534239664898320[42] = 1;
   out_7621534239664898320[43] = 0;
   out_7621534239664898320[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7621534239664898320[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7621534239664898320[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7621534239664898320[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7621534239664898320[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7621534239664898320[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7621534239664898320[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7621534239664898320[51] = 0;
   out_7621534239664898320[52] = 0;
   out_7621534239664898320[53] = 0;
   out_7621534239664898320[54] = 0;
   out_7621534239664898320[55] = 0;
   out_7621534239664898320[56] = 0;
   out_7621534239664898320[57] = 0;
   out_7621534239664898320[58] = 0;
   out_7621534239664898320[59] = 0;
   out_7621534239664898320[60] = 0;
   out_7621534239664898320[61] = 0;
   out_7621534239664898320[62] = 1;
   out_7621534239664898320[63] = 0;
   out_7621534239664898320[64] = 0;
   out_7621534239664898320[65] = 1;
}
void h_12(double *state, double *unused, double *out_4988288577312707100) {
   out_4988288577312707100[0] = state[0];
   out_4988288577312707100[1] = state[1];
   out_4988288577312707100[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8268090944343136867) {
   out_8268090944343136867[0] = 1;
   out_8268090944343136867[1] = 0;
   out_8268090944343136867[2] = 0;
   out_8268090944343136867[3] = 0;
   out_8268090944343136867[4] = 0;
   out_8268090944343136867[5] = 0;
   out_8268090944343136867[6] = 0;
   out_8268090944343136867[7] = 0;
   out_8268090944343136867[8] = 0;
   out_8268090944343136867[9] = 0;
   out_8268090944343136867[10] = 0;
   out_8268090944343136867[11] = 0;
   out_8268090944343136867[12] = 0;
   out_8268090944343136867[13] = 0;
   out_8268090944343136867[14] = 0;
   out_8268090944343136867[15] = 0;
   out_8268090944343136867[16] = 0;
   out_8268090944343136867[17] = 0;
   out_8268090944343136867[18] = 0;
   out_8268090944343136867[19] = 0;
   out_8268090944343136867[20] = 0;
   out_8268090944343136867[21] = 0;
   out_8268090944343136867[22] = 0;
   out_8268090944343136867[23] = 1;
   out_8268090944343136867[24] = 0;
   out_8268090944343136867[25] = 0;
   out_8268090944343136867[26] = 0;
   out_8268090944343136867[27] = 0;
   out_8268090944343136867[28] = 0;
   out_8268090944343136867[29] = 0;
   out_8268090944343136867[30] = 0;
   out_8268090944343136867[31] = 0;
   out_8268090944343136867[32] = 0;
   out_8268090944343136867[33] = 0;
   out_8268090944343136867[34] = 0;
   out_8268090944343136867[35] = 0;
   out_8268090944343136867[36] = 0;
   out_8268090944343136867[37] = 0;
   out_8268090944343136867[38] = 0;
   out_8268090944343136867[39] = 0;
   out_8268090944343136867[40] = 0;
   out_8268090944343136867[41] = 0;
   out_8268090944343136867[42] = 0;
   out_8268090944343136867[43] = 0;
   out_8268090944343136867[44] = 0;
   out_8268090944343136867[45] = 0;
   out_8268090944343136867[46] = 1;
   out_8268090944343136867[47] = 0;
   out_8268090944343136867[48] = 0;
   out_8268090944343136867[49] = 0;
   out_8268090944343136867[50] = 0;
   out_8268090944343136867[51] = 0;
   out_8268090944343136867[52] = 0;
   out_8268090944343136867[53] = 0;
   out_8268090944343136867[54] = 0;
   out_8268090944343136867[55] = 0;
   out_8268090944343136867[56] = 0;
   out_8268090944343136867[57] = 0;
   out_8268090944343136867[58] = 0;
   out_8268090944343136867[59] = 0;
   out_8268090944343136867[60] = 0;
   out_8268090944343136867[61] = 0;
   out_8268090944343136867[62] = 0;
   out_8268090944343136867[63] = 0;
   out_8268090944343136867[64] = 0;
   out_8268090944343136867[65] = 0;
}
void h_35(double *state, double *unused, double *out_5113912582120643214) {
   out_5113912582120643214[0] = state[7];
   out_5113912582120643214[1] = state[8];
   out_5113912582120643214[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7433090097041401040) {
   out_7433090097041401040[0] = 0;
   out_7433090097041401040[1] = 0;
   out_7433090097041401040[2] = 0;
   out_7433090097041401040[3] = 0;
   out_7433090097041401040[4] = 0;
   out_7433090097041401040[5] = 0;
   out_7433090097041401040[6] = 0;
   out_7433090097041401040[7] = 1;
   out_7433090097041401040[8] = 0;
   out_7433090097041401040[9] = 0;
   out_7433090097041401040[10] = 0;
   out_7433090097041401040[11] = 0;
   out_7433090097041401040[12] = 0;
   out_7433090097041401040[13] = 0;
   out_7433090097041401040[14] = 0;
   out_7433090097041401040[15] = 0;
   out_7433090097041401040[16] = 0;
   out_7433090097041401040[17] = 0;
   out_7433090097041401040[18] = 0;
   out_7433090097041401040[19] = 0;
   out_7433090097041401040[20] = 0;
   out_7433090097041401040[21] = 0;
   out_7433090097041401040[22] = 0;
   out_7433090097041401040[23] = 0;
   out_7433090097041401040[24] = 0;
   out_7433090097041401040[25] = 0;
   out_7433090097041401040[26] = 0;
   out_7433090097041401040[27] = 0;
   out_7433090097041401040[28] = 0;
   out_7433090097041401040[29] = 0;
   out_7433090097041401040[30] = 1;
   out_7433090097041401040[31] = 0;
   out_7433090097041401040[32] = 0;
   out_7433090097041401040[33] = 0;
   out_7433090097041401040[34] = 0;
   out_7433090097041401040[35] = 0;
   out_7433090097041401040[36] = 0;
   out_7433090097041401040[37] = 0;
   out_7433090097041401040[38] = 0;
   out_7433090097041401040[39] = 0;
   out_7433090097041401040[40] = 0;
   out_7433090097041401040[41] = 0;
   out_7433090097041401040[42] = 0;
   out_7433090097041401040[43] = 0;
   out_7433090097041401040[44] = 0;
   out_7433090097041401040[45] = 0;
   out_7433090097041401040[46] = 0;
   out_7433090097041401040[47] = 0;
   out_7433090097041401040[48] = 0;
   out_7433090097041401040[49] = 0;
   out_7433090097041401040[50] = 0;
   out_7433090097041401040[51] = 0;
   out_7433090097041401040[52] = 0;
   out_7433090097041401040[53] = 1;
   out_7433090097041401040[54] = 0;
   out_7433090097041401040[55] = 0;
   out_7433090097041401040[56] = 0;
   out_7433090097041401040[57] = 0;
   out_7433090097041401040[58] = 0;
   out_7433090097041401040[59] = 0;
   out_7433090097041401040[60] = 0;
   out_7433090097041401040[61] = 0;
   out_7433090097041401040[62] = 0;
   out_7433090097041401040[63] = 0;
   out_7433090097041401040[64] = 0;
   out_7433090097041401040[65] = 0;
}
void h_32(double *state, double *unused, double *out_3188138417755073815) {
   out_3188138417755073815[0] = state[3];
   out_3188138417755073815[1] = state[4];
   out_3188138417755073815[2] = state[5];
   out_3188138417755073815[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4649431932622983447) {
   out_4649431932622983447[0] = 0;
   out_4649431932622983447[1] = 0;
   out_4649431932622983447[2] = 0;
   out_4649431932622983447[3] = 1;
   out_4649431932622983447[4] = 0;
   out_4649431932622983447[5] = 0;
   out_4649431932622983447[6] = 0;
   out_4649431932622983447[7] = 0;
   out_4649431932622983447[8] = 0;
   out_4649431932622983447[9] = 0;
   out_4649431932622983447[10] = 0;
   out_4649431932622983447[11] = 0;
   out_4649431932622983447[12] = 0;
   out_4649431932622983447[13] = 0;
   out_4649431932622983447[14] = 0;
   out_4649431932622983447[15] = 0;
   out_4649431932622983447[16] = 0;
   out_4649431932622983447[17] = 0;
   out_4649431932622983447[18] = 0;
   out_4649431932622983447[19] = 0;
   out_4649431932622983447[20] = 0;
   out_4649431932622983447[21] = 0;
   out_4649431932622983447[22] = 0;
   out_4649431932622983447[23] = 0;
   out_4649431932622983447[24] = 0;
   out_4649431932622983447[25] = 0;
   out_4649431932622983447[26] = 1;
   out_4649431932622983447[27] = 0;
   out_4649431932622983447[28] = 0;
   out_4649431932622983447[29] = 0;
   out_4649431932622983447[30] = 0;
   out_4649431932622983447[31] = 0;
   out_4649431932622983447[32] = 0;
   out_4649431932622983447[33] = 0;
   out_4649431932622983447[34] = 0;
   out_4649431932622983447[35] = 0;
   out_4649431932622983447[36] = 0;
   out_4649431932622983447[37] = 0;
   out_4649431932622983447[38] = 0;
   out_4649431932622983447[39] = 0;
   out_4649431932622983447[40] = 0;
   out_4649431932622983447[41] = 0;
   out_4649431932622983447[42] = 0;
   out_4649431932622983447[43] = 0;
   out_4649431932622983447[44] = 0;
   out_4649431932622983447[45] = 0;
   out_4649431932622983447[46] = 0;
   out_4649431932622983447[47] = 0;
   out_4649431932622983447[48] = 0;
   out_4649431932622983447[49] = 1;
   out_4649431932622983447[50] = 0;
   out_4649431932622983447[51] = 0;
   out_4649431932622983447[52] = 0;
   out_4649431932622983447[53] = 0;
   out_4649431932622983447[54] = 0;
   out_4649431932622983447[55] = 0;
   out_4649431932622983447[56] = 0;
   out_4649431932622983447[57] = 0;
   out_4649431932622983447[58] = 0;
   out_4649431932622983447[59] = 0;
   out_4649431932622983447[60] = 0;
   out_4649431932622983447[61] = 0;
   out_4649431932622983447[62] = 0;
   out_4649431932622983447[63] = 0;
   out_4649431932622983447[64] = 0;
   out_4649431932622983447[65] = 0;
   out_4649431932622983447[66] = 0;
   out_4649431932622983447[67] = 0;
   out_4649431932622983447[68] = 0;
   out_4649431932622983447[69] = 0;
   out_4649431932622983447[70] = 0;
   out_4649431932622983447[71] = 0;
   out_4649431932622983447[72] = 1;
   out_4649431932622983447[73] = 0;
   out_4649431932622983447[74] = 0;
   out_4649431932622983447[75] = 0;
   out_4649431932622983447[76] = 0;
   out_4649431932622983447[77] = 0;
   out_4649431932622983447[78] = 0;
   out_4649431932622983447[79] = 0;
   out_4649431932622983447[80] = 0;
   out_4649431932622983447[81] = 0;
   out_4649431932622983447[82] = 0;
   out_4649431932622983447[83] = 0;
   out_4649431932622983447[84] = 0;
   out_4649431932622983447[85] = 0;
   out_4649431932622983447[86] = 0;
   out_4649431932622983447[87] = 0;
}
void h_13(double *state, double *unused, double *out_3527303430740254772) {
   out_3527303430740254772[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3527303430740254772[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3527303430740254772[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2933411284323017290) {
   out_2933411284323017290[0] = 0;
   out_2933411284323017290[1] = 0;
   out_2933411284323017290[2] = 0;
   out_2933411284323017290[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2933411284323017290[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2933411284323017290[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2933411284323017290[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2933411284323017290[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2933411284323017290[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2933411284323017290[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2933411284323017290[10] = 0;
   out_2933411284323017290[11] = 0;
   out_2933411284323017290[12] = 0;
   out_2933411284323017290[13] = 0;
   out_2933411284323017290[14] = 0;
   out_2933411284323017290[15] = 0;
   out_2933411284323017290[16] = 0;
   out_2933411284323017290[17] = 0;
   out_2933411284323017290[18] = 0;
   out_2933411284323017290[19] = 0;
   out_2933411284323017290[20] = 0;
   out_2933411284323017290[21] = 0;
   out_2933411284323017290[22] = 0;
   out_2933411284323017290[23] = 0;
   out_2933411284323017290[24] = 0;
   out_2933411284323017290[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2933411284323017290[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2933411284323017290[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2933411284323017290[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2933411284323017290[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2933411284323017290[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2933411284323017290[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2933411284323017290[32] = 0;
   out_2933411284323017290[33] = 0;
   out_2933411284323017290[34] = 0;
   out_2933411284323017290[35] = 0;
   out_2933411284323017290[36] = 0;
   out_2933411284323017290[37] = 0;
   out_2933411284323017290[38] = 0;
   out_2933411284323017290[39] = 0;
   out_2933411284323017290[40] = 0;
   out_2933411284323017290[41] = 0;
   out_2933411284323017290[42] = 0;
   out_2933411284323017290[43] = 0;
   out_2933411284323017290[44] = 0;
   out_2933411284323017290[45] = 0;
   out_2933411284323017290[46] = 0;
   out_2933411284323017290[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2933411284323017290[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2933411284323017290[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2933411284323017290[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2933411284323017290[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2933411284323017290[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2933411284323017290[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2933411284323017290[54] = 0;
   out_2933411284323017290[55] = 0;
   out_2933411284323017290[56] = 0;
   out_2933411284323017290[57] = 0;
   out_2933411284323017290[58] = 0;
   out_2933411284323017290[59] = 0;
   out_2933411284323017290[60] = 0;
   out_2933411284323017290[61] = 0;
   out_2933411284323017290[62] = 0;
   out_2933411284323017290[63] = 0;
   out_2933411284323017290[64] = 0;
   out_2933411284323017290[65] = 0;
}
void h_14(double *state, double *unused, double *out_4122145493608870189) {
   out_4122145493608870189[0] = state[10];
   out_4122145493608870189[1] = state[11];
   out_4122145493608870189[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3489824182940765717) {
   out_3489824182940765717[0] = 0;
   out_3489824182940765717[1] = 0;
   out_3489824182940765717[2] = 0;
   out_3489824182940765717[3] = 0;
   out_3489824182940765717[4] = 0;
   out_3489824182940765717[5] = 0;
   out_3489824182940765717[6] = 0;
   out_3489824182940765717[7] = 0;
   out_3489824182940765717[8] = 0;
   out_3489824182940765717[9] = 0;
   out_3489824182940765717[10] = 1;
   out_3489824182940765717[11] = 0;
   out_3489824182940765717[12] = 0;
   out_3489824182940765717[13] = 0;
   out_3489824182940765717[14] = 0;
   out_3489824182940765717[15] = 0;
   out_3489824182940765717[16] = 0;
   out_3489824182940765717[17] = 0;
   out_3489824182940765717[18] = 0;
   out_3489824182940765717[19] = 0;
   out_3489824182940765717[20] = 0;
   out_3489824182940765717[21] = 0;
   out_3489824182940765717[22] = 0;
   out_3489824182940765717[23] = 0;
   out_3489824182940765717[24] = 0;
   out_3489824182940765717[25] = 0;
   out_3489824182940765717[26] = 0;
   out_3489824182940765717[27] = 0;
   out_3489824182940765717[28] = 0;
   out_3489824182940765717[29] = 0;
   out_3489824182940765717[30] = 0;
   out_3489824182940765717[31] = 0;
   out_3489824182940765717[32] = 0;
   out_3489824182940765717[33] = 1;
   out_3489824182940765717[34] = 0;
   out_3489824182940765717[35] = 0;
   out_3489824182940765717[36] = 0;
   out_3489824182940765717[37] = 0;
   out_3489824182940765717[38] = 0;
   out_3489824182940765717[39] = 0;
   out_3489824182940765717[40] = 0;
   out_3489824182940765717[41] = 0;
   out_3489824182940765717[42] = 0;
   out_3489824182940765717[43] = 0;
   out_3489824182940765717[44] = 0;
   out_3489824182940765717[45] = 0;
   out_3489824182940765717[46] = 0;
   out_3489824182940765717[47] = 0;
   out_3489824182940765717[48] = 0;
   out_3489824182940765717[49] = 0;
   out_3489824182940765717[50] = 0;
   out_3489824182940765717[51] = 0;
   out_3489824182940765717[52] = 0;
   out_3489824182940765717[53] = 0;
   out_3489824182940765717[54] = 0;
   out_3489824182940765717[55] = 0;
   out_3489824182940765717[56] = 1;
   out_3489824182940765717[57] = 0;
   out_3489824182940765717[58] = 0;
   out_3489824182940765717[59] = 0;
   out_3489824182940765717[60] = 0;
   out_3489824182940765717[61] = 0;
   out_3489824182940765717[62] = 0;
   out_3489824182940765717[63] = 0;
   out_3489824182940765717[64] = 0;
   out_3489824182940765717[65] = 0;
}
void h_33(double *state, double *unused, double *out_4479732143254830184) {
   out_4479732143254830184[0] = state[16];
   out_4479732143254830184[1] = state[17];
   out_4479732143254830184[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8680890475386911564) {
   out_8680890475386911564[0] = 0;
   out_8680890475386911564[1] = 0;
   out_8680890475386911564[2] = 0;
   out_8680890475386911564[3] = 0;
   out_8680890475386911564[4] = 0;
   out_8680890475386911564[5] = 0;
   out_8680890475386911564[6] = 0;
   out_8680890475386911564[7] = 0;
   out_8680890475386911564[8] = 0;
   out_8680890475386911564[9] = 0;
   out_8680890475386911564[10] = 0;
   out_8680890475386911564[11] = 0;
   out_8680890475386911564[12] = 0;
   out_8680890475386911564[13] = 0;
   out_8680890475386911564[14] = 0;
   out_8680890475386911564[15] = 0;
   out_8680890475386911564[16] = 1;
   out_8680890475386911564[17] = 0;
   out_8680890475386911564[18] = 0;
   out_8680890475386911564[19] = 0;
   out_8680890475386911564[20] = 0;
   out_8680890475386911564[21] = 0;
   out_8680890475386911564[22] = 0;
   out_8680890475386911564[23] = 0;
   out_8680890475386911564[24] = 0;
   out_8680890475386911564[25] = 0;
   out_8680890475386911564[26] = 0;
   out_8680890475386911564[27] = 0;
   out_8680890475386911564[28] = 0;
   out_8680890475386911564[29] = 0;
   out_8680890475386911564[30] = 0;
   out_8680890475386911564[31] = 0;
   out_8680890475386911564[32] = 0;
   out_8680890475386911564[33] = 0;
   out_8680890475386911564[34] = 0;
   out_8680890475386911564[35] = 0;
   out_8680890475386911564[36] = 0;
   out_8680890475386911564[37] = 0;
   out_8680890475386911564[38] = 0;
   out_8680890475386911564[39] = 1;
   out_8680890475386911564[40] = 0;
   out_8680890475386911564[41] = 0;
   out_8680890475386911564[42] = 0;
   out_8680890475386911564[43] = 0;
   out_8680890475386911564[44] = 0;
   out_8680890475386911564[45] = 0;
   out_8680890475386911564[46] = 0;
   out_8680890475386911564[47] = 0;
   out_8680890475386911564[48] = 0;
   out_8680890475386911564[49] = 0;
   out_8680890475386911564[50] = 0;
   out_8680890475386911564[51] = 0;
   out_8680890475386911564[52] = 0;
   out_8680890475386911564[53] = 0;
   out_8680890475386911564[54] = 0;
   out_8680890475386911564[55] = 0;
   out_8680890475386911564[56] = 0;
   out_8680890475386911564[57] = 0;
   out_8680890475386911564[58] = 0;
   out_8680890475386911564[59] = 0;
   out_8680890475386911564[60] = 0;
   out_8680890475386911564[61] = 0;
   out_8680890475386911564[62] = 1;
   out_8680890475386911564[63] = 0;
   out_8680890475386911564[64] = 0;
   out_8680890475386911564[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4642697741308526443) {
  H(in_vec, out_4642697741308526443);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2165770424783456757) {
  err_fun(nom_x, delta_x, out_2165770424783456757);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3351720479291780110) {
  inv_err_fun(nom_x, true_x, out_3351720479291780110);
}
void live_H_mod_fun(double *state, double *out_6584352024001636745) {
  H_mod_fun(state, out_6584352024001636745);
}
void live_f_fun(double *state, double dt, double *out_1043206997310578708) {
  f_fun(state,  dt, out_1043206997310578708);
}
void live_F_fun(double *state, double dt, double *out_188722001523302554) {
  F_fun(state,  dt, out_188722001523302554);
}
void live_h_4(double *state, double *unused, double *out_6655992373746929060) {
  h_4(state, unused, out_6655992373746929060);
}
void live_H_4(double *state, double *unused, double *out_3248634536311175072) {
  H_4(state, unused, out_3248634536311175072);
}
void live_h_9(double *state, double *unused, double *out_4122145493608870189) {
  h_9(state, unused, out_4122145493608870189);
}
void live_H_9(double *state, double *unused, double *out_3489824182940765717) {
  H_9(state, unused, out_3489824182940765717);
}
void live_h_10(double *state, double *unused, double *out_645947892789743159) {
  h_10(state, unused, out_645947892789743159);
}
void live_H_10(double *state, double *unused, double *out_7621534239664898320) {
  H_10(state, unused, out_7621534239664898320);
}
void live_h_12(double *state, double *unused, double *out_4988288577312707100) {
  h_12(state, unused, out_4988288577312707100);
}
void live_H_12(double *state, double *unused, double *out_8268090944343136867) {
  H_12(state, unused, out_8268090944343136867);
}
void live_h_35(double *state, double *unused, double *out_5113912582120643214) {
  h_35(state, unused, out_5113912582120643214);
}
void live_H_35(double *state, double *unused, double *out_7433090097041401040) {
  H_35(state, unused, out_7433090097041401040);
}
void live_h_32(double *state, double *unused, double *out_3188138417755073815) {
  h_32(state, unused, out_3188138417755073815);
}
void live_H_32(double *state, double *unused, double *out_4649431932622983447) {
  H_32(state, unused, out_4649431932622983447);
}
void live_h_13(double *state, double *unused, double *out_3527303430740254772) {
  h_13(state, unused, out_3527303430740254772);
}
void live_H_13(double *state, double *unused, double *out_2933411284323017290) {
  H_13(state, unused, out_2933411284323017290);
}
void live_h_14(double *state, double *unused, double *out_4122145493608870189) {
  h_14(state, unused, out_4122145493608870189);
}
void live_H_14(double *state, double *unused, double *out_3489824182940765717) {
  H_14(state, unused, out_3489824182940765717);
}
void live_h_33(double *state, double *unused, double *out_4479732143254830184) {
  h_33(state, unused, out_4479732143254830184);
}
void live_H_33(double *state, double *unused, double *out_8680890475386911564) {
  H_33(state, unused, out_8680890475386911564);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
